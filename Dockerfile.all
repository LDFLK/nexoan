## WORK IN PROGRESS
## TODO: Please complete the Dockerfile.all 

# -------------------
# Stage 1: Build Go binaries
# -------------------
FROM golang:1.24 AS builder

WORKDIR /app
COPY . .

RUN cd nexoan/crud-api && go mod download
RUN cd nexoan/crud-api && go build ./...
RUN cd nexoan/crud-api && go build -o crud-service cmd/server/service.go cmd/server/utils.go

RUN mkdir -p /app/testbin
RUN cd nexoan/crud-api/cmd/server && go test -c -o /app/testbin/crud-test .
RUN cd nexoan/crud-api/db/repository/mongo && go test -c -o /app/testbin/mongo-test .
RUN cd nexoan/crud-api/db/repository/neo4j && go test -c -o /app/testbin/neo4j-test .

# -------------------
# Stage 2: Final Image
# -------------------
FROM ballerina/ballerina:2201.12.2

# Switch to root for package installation
USER root

# Install system packages
RUN apk add --no-cache \
    curl wget net-tools nano \
    unzip bash tar gzip gnupg

# Install MongoDB
RUN wget https://fastdl.mongodb.org/linux/mongodb-linux-aarch64-ubuntu2204-6.0.12.tgz \
    && tar -zxvf mongodb-linux-aarch64-ubuntu2204-6.0.12.tgz \
    && mv mongodb-linux-aarch64-ubuntu2204-6.0.12/bin/* /usr/local/bin/ \
    && rm -rf mongodb-linux-aarch64-ubuntu2204-6.0.12.tgz mongodb-linux-aarch64-ubuntu2204-6.0.12 \
    && mkdir -p /data/db

# MongoDB configuration
RUN echo "storage:" > /etc/mongodb.conf \
    && echo "  dbPath: /data/db" >> /etc/mongodb.conf \
    && echo "  journal:" >> /etc/mongodb.conf \
    && echo "    enabled: true" >> /etc/mongodb.conf \
    && echo "systemLog:" >> /etc/mongodb.conf \
    && echo "  destination: file" >> /etc/mongodb.conf \
    && echo "  logAppend: true" >> /etc/mongodb.conf \
    && echo "  path: /var/log/mongodb/mongodb.log" >> /etc/mongodb.conf

# Install Neo4j
RUN wget https://dist.neo4j.org/neo4j-community-5.13.0-unix.tar.gz \
    && tar -xf neo4j-community-5.13.0-unix.tar.gz \
    && mv neo4j-community-5.13.0 /usr/local/neo4j \
    && rm neo4j-community-5.13.0-unix.tar.gz \
    && mkdir -p /var/lib/neo4j/data /var/log/neo4j

# Neo4j configuration
RUN sed -i 's/#server.default_listen_address=0.0.0.0/server.default_listen_address=0.0.0.0/' /usr/local/neo4j/conf/neo4j.conf \
    && sed -i 's/#server.bolt.enabled=true/server.bolt.enabled=true/' /usr/local/neo4j/conf/neo4j.conf \
    && sed -i 's/#server.bolt.address=0.0.0.0:7687/server.bolt.address=0.0.0.0:7687/' /usr/local/neo4j/conf/neo4j.conf \
    && sed -i 's/#server.http.enabled=true/server.http.enabled=true/' /usr/local/neo4j/conf/neo4j.conf \
    && sed -i 's/#server.http.address=0.0.0.0:7474/server.http.address=0.0.0.0:7474/' /usr/local/neo4j/conf/neo4j.conf \
    && sed -i 's/#dbms.security.auth_enabled=true/dbms.security.auth_enabled=true/' /usr/local/neo4j/conf/neo4j.conf \
    && echo "dbms.security.procedures.unrestricted=apoc.*" >> /usr/local/neo4j/conf/neo4j.conf

# Copy compiled binaries and source code
COPY --from=builder /app/nexoan/crud-api/crud-service /usr/local/bin/
COPY --from=builder /app/testbin/* /usr/local/bin/
COPY --from=builder /app/nexoan/crud-api /app/nexoan/crud-api
COPY --from=builder /app/nexoan/update-api /app/nexoan/update-api

WORKDIR /app

# Environment variables
ENV NEO4J_URI=bolt://localhost:7687
ENV NEO4J_USER=neo4j
ENV NEO4J_PASSWORD=neo4j123
ENV MONGO_URI=mongodb://localhost:27017
ENV MONGO_DB_NAME=testdb
ENV MONGO_COLLECTION=metadata
ENV PATH="/usr/local/neo4j/bin:$PATH"

# Expose ports
EXPOSE 7474 7687 27017

# Create scripts directory and copy start script
RUN mkdir -p /scripts
COPY scripts/start.sh /scripts/start.sh
RUN chmod +x /scripts/start.sh

# Switch back to the original user
# USER ballerina

ENTRYPOINT ["/scripts/start.sh"]
