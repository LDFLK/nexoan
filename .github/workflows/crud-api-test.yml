name: CRUD API Test

on:
  push:
    branches: [ main ]
    paths:
      - 'design/crud-api/**'
      - 'Dockerfile.crud'
      - 'docker-compose.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'design/crud-api/**'
      - 'Dockerfile.crud'
      - 'docker-compose.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build and test CRUD service
      run: |
        # Build CRUD service
        docker compose build crud
        
        # Start required dependencies
        docker compose up -d mongodb neo4j
        
        # Wait for dependencies to be healthy
        echo "Waiting for MongoDB and Neo4j to be healthy..."
        docker compose ps
        
        # Wait for dependencies to be ready (with timeout)
        timeout 120 bash -c 'until docker compose ps | grep -q "healthy"; do echo "Waiting for services to be healthy..."; sleep 5; done'

        # Start CRUD service and capture logs
        echo "Starting CRUD service and running tests..."
        docker compose up crud > crud.log 2>&1 &
        CRUD_PID=$!

        # Wait for the service to start and tests to begin
        echo "Waiting for CRUD service to start..."
        timeout 60 bash -c 'until grep -q "Running tests with environment" crud.log; do echo "Waiting for tests to start..."; sleep 2; done'
        
        # Wait for tests to complete (look for test completion indicators)
        echo "Waiting for tests to complete..."
        timeout 300 bash -c '
          while true; do
            if grep -q "❌ Tests failed!" crud.log; then
              echo "Tests failed detected in logs"
              break
            elif grep -q "✅ All tests passed!" crud.log; then
              echo "Tests completed successfully"
              break
            elif grep -q "=== Starting CRUD Service ===" crud.log; then
              echo "Tests completed successfully, service starting"
              break
            elif grep -q "exit status 1" crud.log; then
              echo "Test exit with error detected"
              break
            fi
            echo "Tests still running... checking logs"
            sleep 10
          done
        '

        # Kill the background process and get final logs
        kill $CRUD_PID 2>/dev/null || true
        wait $CRUD_PID 2>/dev/null || true

        # Show all logs
        echo "=== Full CRUD Service Logs ==="
        cat crud.log

        # Also show container logs for additional debugging
        echo "=== Container Logs ==="
        docker compose logs crud || true
        
        # Check test results
        if grep -q "❌ Tests failed!" crud.log; then
          echo "❌ CRUD API tests failed!"
          docker compose down
          exit 1
        elif grep -q "✅ All tests passed!" crud.log || grep -q "=== Starting CRUD Service ===" crud.log; then
          echo "✅ CRUD API tests passed!"
        else
          echo "❓ Could not determine test status from logs"
          echo "Checking if service started successfully..."
          if grep -q "Starting CRUD service" crud.log; then
            echo "✅ CRUD API tests passed (service started successfully)!"
          else
            echo "❌ Test results unclear - failing build"
            docker compose down
            exit 1
          fi
        fi
        
        # Cleanup
        docker compose down 