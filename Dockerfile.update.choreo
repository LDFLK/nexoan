## TODO: Please complete the Dockerfile.update file
## WORK IN PROGRESS

# Build stage for Update service
FROM --platform=${BUILDPLATFORM:-linux/amd64} ballerina/ballerina:2201.11.0 AS builder

# Set working directory
WORKDIR /app

# Copy the source code
COPY . .

# Install shadow package and create user/group
RUN apk add --no-cache shadow && \
    groupadd -g 10014 choreo && \
    useradd -u 10014 -g choreo -s /bin/bash -m choreouser && \
    mkdir -p /home/choreouser/.cache/go-build && \
    chown -R choreouser:choreo /home/choreouser && \
    chmod -R 755 /home/choreouser

# Build the application
RUN bal build design/update-api

# Final stage
FROM --platform=${TARGETPLATFORM:-linux/amd64} ballerina/ballerina:2201.11.0

# Install runtime dependencies
RUN apk add --no-cache ca-certificates netcat-openbsd dos2unix

# Copy the built binary from builder stage
COPY --from=builder /app/design/update-api/target/bin/update-service.jar /app/design/update-api/
COPY --from=builder /app/design/update-api /app/design/update-api
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /etc/group /etc/group

# Create startup script
RUN echo '#!/bin/sh\n\
# Wait for CRUD service to be ready\n\
if [ -n "$CRUD_SERVICE_URL" ]; then\n\
    # Extract host and port from CRUD_SERVICE_URL\n\
    HOST=$(echo $CRUD_SERVICE_URL | sed -E "s|^https?://([^:]+)(:[0-9]+)?.*|\1|")\n\
    PORT=$(echo $CRUD_SERVICE_URL | sed -E "s|^https?://[^:]+:([0-9]+).*|\1|")\n\
    if [ "$PORT" = "$CRUD_SERVICE_URL" ]; then\n\
        PORT=443\n\
    fi\n\
    echo "Waiting for CRUD service at $HOST:$PORT..."\n\
    while ! nc -z $HOST $PORT; do\n\
        sleep 1\n\
    done\n\
    echo "CRUD service is ready!"\n\
fi\n\
\n\
# Start the service\n\
bal run /app/update-service.balx\n\
' > /app/start.sh && \
    chmod +x /app/start.sh && \
    dos2unix /app/start.sh

# Create necessary directories and set permissions
RUN mkdir -p /home/choreouser/.cache/go-build && \
    chown -R choreouser:choreo /home/choreouser && \
    chmod -R 755 /home/choreouser && \
    chown -R choreouser:choreo /app && \
    chmod -R 755 /app

USER 10014

# Expose ports
EXPOSE 8080

# Set the entrypoint
ENTRYPOINT ["/app/start.sh"]
