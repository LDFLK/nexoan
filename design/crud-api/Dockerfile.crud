# Build stage for CRUD service
FROM golang:1.24 AS builder

# Set working directory
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies
RUN go mod download

# Copy the source code
COPY . .

# Build the application
RUN go build -o crud-service cmd/server/service.go cmd/server/utils.go

# Final stage
FROM golang:1.24

# Copy the built binary from builder stage
COPY --from=builder /app/crud-service /usr/local/bin/

# Set environment variables with defaults for Neo4j connection
# Note: When running in Docker, use the service name 'neo4j' if both services are in the same network
ENV NEO4J_URI=${NEO4J_URI:-bolt://neo4j:7687}
ENV NEO4J_USER=${NEO4J_USER:-neo4j}
ENV NEO4J_PASSWORD=${NEO4J_PASSWORD:-neo4j123}

# Set MongoDB environment variables with defaults
ENV MONGO_URI=${MONGO_URI:-mongodb://mongo:27017}
ENV MONGO_DB_NAME=${MONGO_DB_NAME:-testdb}
ENV MONGO_COLLECTION=${MONGO_COLLECTION:-metadata}
ENV MONGO_ADMIN_USER=${MONGO_ADMIN_USER:-admin}
ENV MONGO_ADMIN_PASSWORD=${MONGO_ADMIN_PASSWORD:-test123456}

# Set CRUD service environment variables
ENV CRUD_SERVICE_HOST=${CRUD_SERVICE_HOST:-0.0.0.0}
ENV CRUD_SERVICE_PORT=${CRUD_SERVICE_PORT:-50051}

# Expose ports
EXPOSE 50051

# Display environment variables and start the service
CMD echo "Environment Variables:" && \
    echo "NEO4J_URI: $NEO4J_URI" && \
    echo "NEO4J_USER: $NEO4J_USER" && \
    echo "NEO4J_PASSWORD: ********" && \
    echo "MONGO_URI: $MONGO_URI" && \
    echo "MONGO_DB_NAME: $MONGO_DB_NAME" && \
    echo "MONGO_COLLECTION: $MONGO_COLLECTION" && \
    echo "MONGO_ADMIN_USER: $MONGO_ADMIN_USER" && \
    echo "MONGO_ADMIN_PASSWORD: ********" && \
    echo "CRUD_SERVICE_HOST: $CRUD_SERVICE_HOST" && \
    echo "CRUD_SERVICE_PORT: $CRUD_SERVICE_PORT" && \
    echo "Starting CRUD service..." && \
    exec crud-service
